class Solution {
public:
    int maxScore(vector<int>& cardPoints, int k) {
        int n = cardPoints.size();
        int totalSum = 0;

        for (int point : cardPoints)
            totalSum += point;

        if (k == n) return totalSum;

        int windowSize = n - k;
        int minWindowSum = 0;

        // Initial window sum of size n - k
        for (int i = 0; i < windowSize; i++) {
            minWindowSum += cardPoints[i];
        }

        int currentSum = minWindowSum;
        for (int i = windowSize; i < n; i++) {
            currentSum += cardPoints[i] - cardPoints[i - windowSize];
            minWindowSum = min(minWindowSum, currentSum);
        }

        return totalSum - minWindowSum;
    }
};
