#include <bits/stdc++.h>
using namespace std;

class Solution {
public:
    int maxLen(vector<int>& arr) {
        unordered_map<int, int> prefixSumMap;
        int sum = 0, max_length = 0;

        for (int i = 0; i < arr.size(); i++) {
            sum += arr[i];

            if (sum == 0) {
                max_length = i + 1;
            }

            if (prefixSumMap.find(sum) != prefixSumMap.end()) {
                max_length = max(max_length, i - prefixSumMap[sum]);
            } else {
                prefixSumMap[sum] = i;
            }
        }

        return max_length;
    }
};

int main() {
    int T;
    cin >> T;
    
    while (T--) {
        int N;
        cin >> N;
        vector<int> A(N);
        
        for (int i = 0; i < N; i++)
            cin >> A[i];

        Solution obj;
        cout << obj.maxLen(A) << endl;
    }

    return 0;
}
