class Solution {
  public:
    int lenOfLongestSubarr(vector<int>& arr, int k) {
        unordered_map<int, int> sum_map; 
        int max_len = 0;  
        int sum_so_far = 0;  
        
        
        for (int i = 0; i < arr.size(); i++) {
            sum_so_far += arr[i];  

            
            if (sum_so_far == k) {
                max_len = i + 1;  
            }
            
            
            if (sum_map.find(sum_so_far - k) != sum_map.end()) {
                max_len = max(max_len, i - sum_map[sum_so_far - k]);
            }

            
            if (sum_map.find(sum_so_far) == sum_map.end()) {
                sum_map[sum_so_far] = i;
            }
        }

        return max_len;

    }
};
